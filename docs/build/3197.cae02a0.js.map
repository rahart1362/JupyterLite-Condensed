{"version":3,"file":"3197.cae02a0.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/syntax-tree.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/stream.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/cst-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/errors.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/languages/generated/ast.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/ast-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/regexp-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/grammar-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSlice.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/drop.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/assign.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/pickBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/isRegExp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseIsRegExp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/model.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/uniq.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSome.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/some.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/includes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_arrayEvery.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseEvery.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/every.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/constants.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/negate.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/reject.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/indexOf.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/difference.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseDifference.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/compact.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/head.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/print.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/timer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/flatMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_arrayAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/groupBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_createAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/dropRight.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/atn.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/dfa.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/uniqBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/cst-node-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/langium-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/parser-builder-base.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/token-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/value-converter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/promise-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-uri/lib/esm/index.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/uri-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/documents.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/validation/validation-registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/validation/document-validator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/disposable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/linker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/name-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/references.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/collections.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope-computation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/caching.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/serializer/json-serializer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/service-registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/ast-descriptions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/ast-node-locator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/configuration.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/document-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/index-manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/workspace-manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/jsdoc.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/documentation-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/comment-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/dependency-injection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/async-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/workspace-lock.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/serializer/hydrator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/default-module.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/languages/grammar-config.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/langium-parser-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/completion-parser-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/file-system-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/grammar-loader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseExtremum.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseLt.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSet.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_basePickBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/clone.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/defaults.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/findIndex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/find.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_createFind.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/flatten.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseHas.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/has.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/isString.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/last.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/map.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/min.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_trimmedEndIndex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseTrim.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toNumber.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toFinite.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toInteger.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/process/browser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/events.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/is.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/ral.js"],"sourcesContent":["import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [\"Architecture\", \"Branch\", \"Checkout\", \"CherryPicking\", \"Commit\", \"Common\", \"Direction\", \"Edge\", \"GitGraph\", \"Group\", \"Info\", \"Junction\", \"Merge\", \"Packet\", \"PacketBlock\", \"Pie\", \"PieSection\", \"Service\", \"Statement\"];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case \"Architecture\": {\n        return {\n          name: \"Architecture\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Branch\": {\n        return {\n          name: \"Branch\",\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case \"Checkout\": {\n        return {\n          name: \"Checkout\",\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case \"CherryPicking\": {\n        return {\n          name: \"CherryPicking\",\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case \"Commit\": {\n        return {\n          name: \"Commit\",\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Common\": {\n        return {\n          name: \"Common\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Edge\": {\n        return {\n          name: \"Edge\",\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"GitGraph\": {\n        return {\n          name: \"GitGraph\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Group\": {\n        return {\n          name: \"Group\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Info\": {\n        return {\n          name: \"Info\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Junction\": {\n        return {\n          name: \"Junction\",\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case \"Merge\": {\n        return {\n          name: \"Merge\",\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Packet\": {\n        return {\n          name: \"Packet\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PacketBlock\": {\n        return {\n          name: \"PacketBlock\",\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case \"Pie\": {\n        return {\n          name: \"Pie\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PieSection\": {\n        return {\n          name: \"PieSection\",\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case \"Service\": {\n        return {\n          name: \"Service\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Direction\": {\n        return {\n          name: \"Direction\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Info\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Packet\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Pie\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Architecture\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"fragment\":true,\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"LeftPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"RightPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Arrow\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"GitGraph\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-46DW6VJ7.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-W2GHVCYJ.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-BEWT4RHE.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-I3QFYML2.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-YCYPL57B.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        const iterator = other[Symbol.iterator]();\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        const set = new Set();\n        return this.filter(e => {\n            const value = by ? by(e) : e;\n            if (set.has(value)) {\n                return false;\n            }\n            else {\n                set.add(value);\n                return true;\n            }\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn,\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character < range.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character > to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else {\n        return RangeComparison.OverlapFront;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.0.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return ['AbstractElement', 'AbstractRule', 'AbstractType', 'Action', 'Alternatives', 'ArrayLiteral', 'ArrayType', 'Assignment', 'BooleanLiteral', 'CharacterRange', 'Condition', 'Conjunction', 'CrossReference', 'Disjunction', 'EndOfFile', 'Grammar', 'GrammarImport', 'Group', 'InferredType', 'Interface', 'Keyword', 'NamedArgument', 'NegatedToken', 'Negation', 'NumberLiteral', 'Parameter', 'ParameterReference', 'ParserRule', 'ReferenceType', 'RegexToken', 'ReturnType', 'RuleCall', 'SimpleType', 'StringLiteral', 'TerminalAlternatives', 'TerminalGroup', 'TerminalRule', 'TerminalRuleCall', 'Type', 'TypeAttribute', 'TypeDefinition', 'UnionType', 'UnorderedGroup', 'UntilToken', 'ValueLiteral', 'Wildcard'];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case 'AbstractElement': {\n                return {\n                    name: 'AbstractElement',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'ArrayLiteral': {\n                return {\n                    name: 'ArrayLiteral',\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'ArrayType': {\n                return {\n                    name: 'ArrayType',\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case 'BooleanLiteral': {\n                return {\n                    name: 'BooleanLiteral',\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case 'Conjunction': {\n                return {\n                    name: 'Conjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Disjunction': {\n                return {\n                    name: 'Disjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Grammar': {\n                return {\n                    name: 'Grammar',\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'GrammarImport': {\n                return {\n                    name: 'GrammarImport',\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case 'InferredType': {\n                return {\n                    name: 'InferredType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'Interface': {\n                return {\n                    name: 'Interface',\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'NamedArgument': {\n                return {\n                    name: 'NamedArgument',\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Negation': {\n                return {\n                    name: 'Negation',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NumberLiteral': {\n                return {\n                    name: 'NumberLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Parameter': {\n                return {\n                    name: 'Parameter',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'ParameterReference': {\n                return {\n                    name: 'ParameterReference',\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case 'ParserRule': {\n                return {\n                    name: 'ParserRule',\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case 'ReferenceType': {\n                return {\n                    name: 'ReferenceType',\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case 'ReturnType': {\n                return {\n                    name: 'ReturnType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'SimpleType': {\n                return {\n                    name: 'SimpleType',\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case 'StringLiteral': {\n                return {\n                    name: 'StringLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'TerminalRule': {\n                return {\n                    name: 'TerminalRule',\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Type': {\n                return {\n                    name: 'Type',\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'TypeAttribute': {\n                return {\n                    name: 'TypeAttribute',\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'UnionType': {\n                return {\n                    name: 'UnionType',\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'Action': {\n                return {\n                    name: 'Action',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Alternatives': {\n                return {\n                    name: 'Alternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Assignment': {\n                return {\n                    name: 'Assignment',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'CharacterRange': {\n                return {\n                    name: 'CharacterRange',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'CrossReference': {\n                return {\n                    name: 'CrossReference',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'EndOfFile': {\n                return {\n                    name: 'EndOfFile',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Group': {\n                return {\n                    name: 'Group',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Keyword': {\n                return {\n                    name: 'Keyword',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NegatedToken': {\n                return {\n                    name: 'NegatedToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'RegexToken': {\n                return {\n                    name: 'RegexToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case 'RuleCall': {\n                return {\n                    name: 'RuleCall',\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'TerminalAlternatives': {\n                return {\n                    name: 'TerminalAlternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalGroup': {\n                return {\n                    name: 'TerminalGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalRuleCall': {\n                return {\n                    name: 'TerminalRuleCall',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'UnorderedGroup': {\n                return {\n                    name: 'UnorderedGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'UntilToken': {\n                return {\n                    name: 'UntilToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'Wildcard': {\n                return {\n                    name: 'Wildcard',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return regexp.test(' ');\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !terminalRegex(terminalRule).test(' ');\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        return this.nodeStack[this.nodeStack.length - 1];\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, false);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n    addHiddenTokens(hiddenTokens) {\n        for (const token of hiddenTokens) {\n            const hiddenNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            hiddenNode.root = this.rootNode;\n            this.addHiddenToken(this.rootNode, hiddenNode);\n        }\n    }\n    addHiddenToken(node, token) {\n        const { offset: tokenStart, end: tokenEnd } = token;\n        for (let i = 0; i < node.content.length; i++) {\n            const child = node.content[i];\n            const { offset: childStart, end: childEnd } = child;\n            if (isCompositeCstNode(child) && tokenStart > childStart && tokenEnd < childEnd) {\n                this.addHiddenToken(child, token);\n                return;\n            }\n            else if (tokenEnd <= childStart) {\n                node.content.splice(i, 0, token);\n                return;\n            }\n        }\n        // We know that we haven't found a suited position for the token\n        // So we simply add it to the end of the current node\n        node.content.push(token);\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getTypeName, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = rule.fragment ? undefined : isDataTypeRule(rule) ? DatatypeSymbol : getTypeName(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    parse(input) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const result = this.mainRule.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenTokens(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            if (!this.isRecording()) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (!this.isRecording() && result === undefined) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, feature, args) {\n        let cstNode;\n        if (!this.isRecording()) {\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const resultKind = result.$type;\n                const object = this.assignWithoutOverride(result, current);\n                if (resultKind) {\n                    object.$type = resultKind;\n                }\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            // This branch is used for left recursive grammar rules.\n            // Those don't call `construct` before another action.\n            // Therefore, we need to call it here.\n            if (!last.$cstNode && action.feature && action.operator) {\n                last = this.construct(false);\n                const feature = last.$cstNode.feature;\n                this.nodeBuilder.buildCompositeNode(feature);\n            }\n            const newItem = { $type };\n            this.stack.pop();\n            this.stack.push(newItem);\n            if (action.feature && action.operator) {\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n        }\n    }\n    construct(pop = true) {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        if (pop) {\n            this.stack.pop();\n        }\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input);\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy() }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const rules = new Map();\n    const parserContext = {\n        parser,\n        tokens,\n        rules,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        ctx.rules.set(rule.name, parserContext.parser.rule(rule, buildElement(ctx, rule.definition)));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule type: ${ruleCall.$type}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, terminal.rule.ref), crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.rules.get(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n            LINE_BREAKS: true\n        };\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u')) {\n            // Unicode regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        return {\n            name: keyword.value,\n            PATTERN: this.buildKeywordPattern(keyword, caseInsensitive),\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = Date.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = Date.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, cancellationToken) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (cancellationToken) {\n            return this.createAsync(uri, textDocument, cancellationToken);\n        }\n        else {\n            return this.create(uri, textDocument);\n        }\n    }\n    fromString(text, uri, cancellationToken) {\n        if (cancellationToken) {\n            return this.createAsync(uri, text, cancellationToken);\n        }\n        else {\n            return this.create(uri, text);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText());\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.references = [];\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            try {\n                await check.call(thisObj, node, accept, cancelToken);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    throw err;\n                }\n                console.error('An error occurred during validation:', err);\n                const message = err instanceof Error ? err.message : String(err);\n                if (err instanceof Error && err.stack) {\n                    console.error(err.stack);\n                }\n                accept('error', 'An error occurred during validation: ' + message, { node });\n            }\n        };\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        for (const lexerError of parseResult.lexerErrors) {\n            const diagnostic = {\n                severity: toDiagnosticSeverity('error'),\n                range: {\n                    start: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column - 1\n                    },\n                    end: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column + lexerError.length - 1\n                    }\n                },\n                message: lexerError.message,\n                data: diagnosticData(DocumentValidator.LexingError),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n        return validationItems;\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Error\n        case 'warning':\n            return 2; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Warning\n        case 'info':\n            return 3; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Information\n        case 'hint':\n            return 4; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Hint\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                }\n            }\n            catch (err) {\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${err}` });\n            }\n        }\n        // Add the reference to the document's array of references\n        document.references.push(ref);\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && getDocument(node).state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${err}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = getDocument(refInfo.container);\n        if (document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCanceled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    constructor(sharedServices) {\n        super(uri => uri.toString());\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n            const allUris = changed.concat(deleted);\n            for (const uri of allUris) {\n                this.clear(uri);\n            }\n        }));\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace changes, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    constructor(sharedServices) {\n        super();\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n            this.clear();\n        }));\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options = {}) {\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, options);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options = {}) {\n        const root = JSON.parse(content);\n        this.linkNode(root, root, options);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    register(language) {\n        if (!this.singleton && !this.map) {\n            // This is the first language to be registered; store it as singleton.\n            this.singleton = language;\n            return;\n        }\n        if (!this.map) {\n            this.map = {};\n            if (this.singleton) {\n                // Move the previous singleton instance to the new map.\n                for (const ext of this.singleton.LanguageMetaData.fileExtensions) {\n                    this.map[ext] = this.singleton;\n                }\n                this.singleton = undefined;\n            }\n        }\n        // Store the language services in the map.\n        for (const ext of language.LanguageMetaData.fileExtensions) {\n            if (this.map[ext] !== undefined && this.map[ext] !== language) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${language.LanguageMetaData.languageId}'.`);\n            }\n            this.map[ext] = language;\n        }\n    }\n    getServices(uri) {\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.map === undefined) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.map[ext];\n        if (!services) {\n            throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n        }\n        return services;\n    }\n    get all() {\n        if (this.singleton !== undefined) {\n            return [this.singleton];\n        }\n        if (this.map !== undefined) {\n            return Object.values(this.map);\n        }\n        return [];\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document = getDocument(node)) {\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: document.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            this.updateSectionConfiguration(section, change.settings[section]);\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect all documents that we should rebuild\n        const rebuildDocuments = this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray();\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(e => e.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n        }\n        await this.notifyBuildPhase(filtered, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        for (const listener of listeners) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer } from 'chevrotain';\nexport class DefaultLexer {\n    constructor(services) {\n        const tokens = services.parser.TokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full'\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text) {\n        var _a;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : []\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        get: (obj, prop) => _resolve(obj, prop, module, injector || proxy),\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)),\n        has: (_, prop) => prop in module,\n        ownKeys: () => [...Reflect.ownKeys(module), isProxy] // used by for..in\n    });\n    proxy[isProxy] = true;\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. See https://langium.org/docs/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser. This implementation only wraps the sync parser in a promise.\n *\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = new CancellationTokenSource();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken: cancellationToken !== null && cancellationToken !== void 0 ? cancellationToken : CancellationToken.None\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            lexerErrors: result.lexerErrors.map(e => (Object.assign({}, e))),\n            parserErrors: result.parserErrors.map(e => (Object.assign({}, e))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        if (element) {\n            return element;\n        }\n        else {\n            throw new Error('Invalid grammar element id: ' + id);\n        }\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: () => new DefaultServiceRegistry(),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n"],"names":["InfoTokenBuilder","this","constructor","super","InfoModule","parser","TokenBuilder","ValueConverter","createInfoServices","context","shared","Info","ServiceRegistry","register","PieTokenBuilder","PieValueConverter","runCustomConverter","rule","input","_cstNode","name","replace","trim","PieModule","createPieServices","Pie","PacketTokenBuilder","PacketModule","createPacketServices","Packet","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","Architecture","GitGraphTokenBuilder","GitGraphModule","createGitGraphServices","GitGraph","__defProp","Object","defineProperty","__name","target","value","configurable","item","reflection","isInstance","Branch","Commit","Merge","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","Error","getTypeMetaData","type","properties","defaultValue","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","InfoLanguageMetaData","languageId","fileExtensions","caseInsensitive","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","MermaidGeneratedSharedModule","AstReflection","InfoGeneratedModule","Grammar","LanguageMetaData","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","cstNode","runCommonConverter","regex","match","exec","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Set","buildKeywordTokens","rules","terminalTokens","options","tokenTypes","forEach","tokenType","has","PATTERN","RegExp","toString","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","parse","diagramType","text","initializer","result","lexerErrors","length","parserErrors","MermaidParseError","map","err","message","join","obj","$refText","isLinkingError","reference","AbstractAstReflection","subtypes","allSubtypes","node","nested","existing","undefined","getAllSubTypes","allTypes","types","possibleSubType","push","Array","isArray","content","isRootCstNode","fullText","StreamImpl","startFn","nextFn","iterator","state","next","Symbol","isEmpty","Boolean","done","count","toArray","toSet","toMap","keyFn","valueFn","entryStream","element","Map","concat","other","first","firstDone","DONE_RESULT","separator","addSeparator","prototype","call","indexOf","searchElement","fromIndex","index","every","predicate","some","callbackfn","filter","nonNullable","e","reduce","initialValue","previousValue","reduceRight","recursiveReduce","find","findIndex","includes","flatMap","mapped","isIterable","flat","depth","stream","head","tail","skipCount","i","limit","maxSize","size","distinct","by","set","add","exclude","key","otherKeySet","ownKey","EMPTY_STREAM","freeze","collections","collection","collIndex","arrIndex","array","TreeStreamImpl","root","children","iterators","includeRoot","pruned","pop","prune","Reduction","RangeComparison","streamCst","tokenToRange","token","start","character","startColumn","line","startLine","end","endColumn","endLine","toDocumentSegment","offset","range","sum","a","b","product","min","Math","max","DefaultNameRegexp","isCommentNode","commentNames","ErrorWithLocation","assertUnreachable","_","AbstractRule","AbstractType","Condition","ValueLiteral","AbstractElement","BooleanLiteral","Conjunction","Disjunction","InferredType","isInferredType","Interface","isInterface","Negation","ParameterReference","ParserRule","isParserRule","ReturnType","SimpleType","TerminalRule","isTerminalRule","Type","isType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","CrossReference","isCrossReference","EndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","RegexToken","RuleCall","isRuleCall","TerminalAlternatives","TerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","Wildcard","LangiumGrammarAstReflection","getContainerOfType","typePredicate","$container","getDocument","rootNode","findRootNode","$document","streamContents","keys","keyIndex","arrayIndex","startsWith","isAstNodeInRange","streamAst","astNode","_a","nodeRange","$cstNode","to","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","compareRange","inRange","streamReferences","copyDefaultValue","propertyType","cc","char","charCodeAt","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","idx","groupIdx","saveState","restoreState","newState","pattern","consumeChar","disjunction","flags","loc","begin","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","quantifier","isBacktracking","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","classEscape","capturing","groupAst","number","parseInt","nextChar","howMuch","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","child","hasOwnProperty","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","NEWLINE_REGEXP","regexpParser","visitor","arguments","isStarting","endRegexpStack","multiline","endRegex","reset","startRegexp","String","fromCharCode","escapedChar","escapeRegExp","isMultilineComment","regexp","isWhitespace","getAllReachableRules","grammar","allTerminals","ruleNames","entryRule","entry","getEntryRule","topMostRules","hidden","getHiddenRules","ruleDfs","visitedSet","refRule","ref","findNodeForProperty","nodes","findNodesForPropertyInternal","nodeFeature","grammarSource","feature","findNameAssignment","startNode","findNameAssignmentInternal","cache","go","refType","childAssignment","get","toLowerCase","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","definition","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","actionType","action","getActionType","terminalRegex","terminalRule","s","u","source","abstractElementToRegex","flagText","entries","WILDCARD","withCardinality","alternatives","elements","cardinality","lookahead","right","keywordToRegex","left","wrap","negate","until","terminal","lastSlash","lastIndexOf","regexFlags","keyword","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","bar","n","guard","toInteger","object","isArrayLike","props","prop","path","nodeIsRegExp","isRegExp","isObjectLike","AbstractProduction","_definition","accept","prod","NonTerminal","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","isString","label","terminalType","serializedTerminal","tokType","LABEL","terminalLabel","RestWalker","walk","prevRest","subProd","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","func","nativeMax","values","isOptionalProd","alreadyVisited","getProductionDslName","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","flatten","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","args","apply","difference","isArrayLikeObject","iteratee","comparator","isCommon","valuesLength","outer","computed","valuesIndex","resIndex","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","upperChar","lowerChar","handleIgnoreCase","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","isFunction","isShortPattern","LineTerminatorOptimizedTester","len","lastIndex","c","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","charCodeToOptimizedIdxMap","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenTypeIdx","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","categories","searching","currTokType","CATEGORIES","newCategories","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","positionTracking","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","errorMessageProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","startOffset","column","charAt","traceInitPerf","skipValidations","recoveryEnabled","Lexer","lexerDefinition","config","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","modes","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","trackLines","errors","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","isUndefined","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","longerAlt","LONGER_ALT","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","details","buildLineBreakIssueMessage","warningDescriptor","LINE_BREAKS","NO_LINE_BREAKS_FLAGS","performWarningRuntimeChecks","allModeNames","currModDef","currModName","validModesNames","missingResult","tokenTypesWithMissingPattern","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","startAnchorVisitor","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","clazz","GROUP","SKIPPED","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","validatePatterns","currAnalyzeResult","tracer","defaults","useSticky","debug","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","analyzeTokenTypes","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","endOffset","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GAstVisitor","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","getExtraProductionArgument","OccurrenceValidationCollector","allProductions","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","firstProd","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","validateAmbiguousAlternationAlternatives","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","topLevelRules","collectorVisitor","allRuleProductions","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","NAME","defineNameProp","nameValue","enumerable","writable","defaultVisit","ctx","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","CstVisitorDefinitionError","RECORDING_NULL_OBJECT","description","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","baseCtors","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","className","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","actualOptions","topRulesTable","topLevels","refResolver","definitionErrors","validationErrors","tokensMap","duplicateErrors","productionGroups","duplicates","currGroup","currDuplicates","defError","DUPLICATE_PRODUCTIONS","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","createBaseSemanticVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","buildATNKey","ATN_BASIC","ATN_PLUS_BLOCK_START","ATN_STAR_BLOCK_START","ATN_RULE_STOP","ATN_BLOCK_END","ATN_STAR_LOOP_BACK","ATN_STAR_LOOP_ENTRY","ATN_PLUS_LOOP_BACK","ATN_LOOP_END","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","tokenRef","currentRule","nonTerminal","ruleToStartState","addTransition","ruleRef","defineDecisionState","makeAlts","optional","handle","epsilon","decisionMap","block","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","sep","blkStart","blkEnd","loop","loopback","loopEnd","decisionStates","decision","buildRuleHandle","stop","ruleToStopState","partial","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","splice","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","ruleLength","createRuleStartAndStopATNStates","ruleBlock","createATN","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","atnState","numberOfTransitions","closure","computeStartState","performLookahead","s0","previousD","d","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","Is","MIN_VALUE","MAX_VALUE","Number","candidate","objectLiteral","one","two","three","four","uri","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","parent","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","slice","leftIdx","rightIdx","ret","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","construct","addHiddenTokens","hiddenTokens","hiddenNode","addHiddenToken","tokenStart","tokenEnd","childStart","childEnd","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","unshift","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","services","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","callback","wrapOption","wrapMany","wrapAtLeastOne","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","fragment","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","lexerResult","clear","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","resultKind","assignWithoutOverride","newItem","$containerProperty","$containerIndex","linkContentToContainer","typeMetaData","genericNode","assignMandatoryProperties","buildReference","existingValue","newValue","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getRule","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","wrapped","groupState","trackedAlternatives","delete","buildUnorderedGroup","buildGroup","condition","isConjunction","isNegation","isParameterReference","isBooleanLiteral","true","guardCondition","crossRef","assignTerminal","getRuleName","DefaultTokenBuilder","buildTokens","reachableRules","buildTerminalTokens","terminalToken","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","buildKeywordPattern","findLongerAlt","getCaseInsensitivePattern","longerAlts","re","process","tmp","appendRaw","nbChars","substr","appendOptional","partialRegExp","partialMatches","DefaultValueConverter","nameAssigment","getCrossReferenceTerminal","convertInt","convertString","convertID","_c","getRuleType","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","lastTick","isOperationCancelled","interruptAndCheck","CancellationToken","None","now","Promise","resolve","setImmediate","setTimeout","isCancellationRequested","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","LIB","r","o","h","cwd","normalize","isAbsolute","relative","f","l","_makeLong","dirname","basename","extname","format","dir","base","ext","delimiter","win32","posix","exports","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w","joinPath","resolvePath","UriUtils","DocumentState","ValidationCategory","DocumentValidator","Disposable","equals","fromPath","toPath","fromParts","split","toParts","repeat","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","workspace","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","fromModel","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","LangiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","Changed","precomputedScopes","deleteDocument","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","unlink","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","findAssignment","nodeElem","nameNode","isChildNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","getAstNodePath","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","dispose","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onUpdate","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserialize","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","findNodesForProperty","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","singleton","diagnosticData","ValidationRegistry","checksRecord","thisObj","category","callbacks","wrapValidationException","addEntry","getChecks","checks","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","_options","lexerError","diagnostic","toDiagnosticSeverity","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","getDiagnosticRange","treeIterator","keywordNodes","childNode","findNodesForKeywordInternal","findNodeForKeyword","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","DefaultConfigurationProvider","_ready","settings","workspaceConfig","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deleted","deletedUri","remove","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","Linked","listener","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyBuildPhase","onBuildPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listeners","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","folders","workspaceFolders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexer","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","isJSDoc","firstRegex","lastRegex","opts","currentLine","currentCharacter","tagMatch","fullMatch","inlineTagMatches","matchAll","startPosition","parseJSDocComment","parseJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","getPreviousNode","findCommentNode","multilineCommentRules","DefaultAsyncParser","syncParser","DefaultWorkspaceLock","previousTokenSource","CancellationTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","prepareLangiumParser","createLangiumParser","CompletionParser","createCompletionParser","References","serializer","Hydrator","JsonSerializer","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","Reflect","__requested__","cause","value2","value1","EmptyFileSystemProvider","EmptyFileSystem","minimalGrammarModule","minimalSharedGrammarModule","loadGrammarFromJson","json","createMinimalGrammarServices","customizer","objValue","paths","objectProto","sources","propsIndex","propsLength","findIndexFunc","iterable","reWhitespace","reTrimStart","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isSymbol","valueOf","isBinary","remainder","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","nextTick","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","chdir","umask","ral_1","events_1","Cancelled","shortcutEvent","default","MutableToken","_isCancelled","_emitter","fire","Emitter","_token","_disposable","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","invoke","contexts","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","elem","_ral","RAL","install","ral"],"sourceRoot":""}